syntax="proto3";
package services;
import "userModels.proto";
option go_package="./;protos";

message UserRequest{
  //@inject_tag: json:"id" form:"id"
  uint64 Id = 1;
  //@inject_tag: json:"uid" form:"uid"
  uint64 Uid = 2;
  // @inject_tag: json:"user_name" form:"user_name" uri:"user_name"
  string UserName=3;
  // @inject_tag: json:"password" form:"password" uri:"password"
  string Password=4;
  // @inject_tag: json:"password_confirm" form:"password_confirm" uri:"password_confirm"
  string PasswordConfirm=5;
  // @inject_tag: json:"phone" form:"phone" uri:"phone"
  string Phone=6;
  // @inject_tag: json:"desc" form:"desc" uri:"desc"
  string Desc=7;
  // @inject_tag: json:"address" form:"address" uri:"address"
  string Address=8;
  // @inject_tag: json:"Start" form:"Start" uri:"Start"
  uint32 Start = 9;
  // @inject_tag: json:"Limit" form:"Limit" uri:"Limit"
  uint32 Limit = 10;
}

message UserListResponse{
    repeated UserModel UserList =1;
    // @inject_tag: json:"Count"
    uint32 Count=2;
}

message UserDetailResponse{
    UserModel UserDetail =1;
    // @inject_tag: json:"code"
    uint32 Code=2;
}

service UserService{
    // 用户
    rpc UserLogin(UserRequest) returns(UserDetailResponse);
    rpc UserRegister(UserRequest) returns(UserDetailResponse);
    rpc GetUsersList(UserRequest) returns(UserListResponse);
    rpc GetUser(UserRequest) returns(UserDetailResponse);
    rpc AdminUserLogin(UserRequest) returns(UserDetailResponse);
    rpc AdminUserRegister(UserRequest) returns(UserDetailResponse);
    rpc AdminUserDelte(UserRequest) returns(UserDetailResponse);
}